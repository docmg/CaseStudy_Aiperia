//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

model Store {
  id              Int              @id() @default(autoincrement())
  label           String
  number          Int
  recommendations Recommendation[]
  deliveries      Delivery[]
  Sale            Sale[]
  Metrics         Metrics[]
}

model Product {
  id              Int              @id() @default(autoincrement())
  name            String
  number          Int
  price           Float
  recommendations Recommendation[]
  deliveries      Delivery[]
  Sale            Sale[]
  Metrics         Metrics[]
}

model Recommendation {
  targetDate DateTime
  storeId    Int
  store      Store    @relation(fields: [storeId], references: [id])
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
  value      Float

  @@unique([storeId, productId, targetDate])
}

model Delivery {
  targetDate DateTime
  storeId    Int
  store      Store    @relation(fields: [storeId], references: [id])
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
  value      Float

  @@unique([storeId, productId, targetDate])
}

/// @@allow('read', true)
model Sale {
  targetDate     DateTime
  storeId        Int
  store          Store    @relation(fields: [storeId], references: [id])
  productId      Int
  product        Product  @relation(fields: [productId], references: [id])
  salesQuantity  Int
  salesValue     Float
  demandQuantity Int
  demandValue    Float

  @@unique([storeId, productId, targetDate])
}

view Metrics {
  targetDate          DateTime
  storeId             Int
  store               Store    @relation(fields: [storeId], references: [id])
  productId           Int
  product             Product  @relation(fields: [productId], references: [id])
  deliveredQuantity   Int
  deliveredValue      Float
  recommendedQuantity Int
  recommendedValue    Float
  salesQuantity       Int
  salesValue          Float
  demandQuantity      Int
  demandValue         Float

  @@unique([storeId, productId, targetDate])
}
